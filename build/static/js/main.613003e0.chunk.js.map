{"version":3,"sources":["component/Information/Navig/Navig.module.css","component/Information/Currencies/Currencies.module.css","component/Header/Header.module.css","component/Information/Valuta/Valuta.module.css","component/Information/Informat.module.css","component/Information/Exchange/Exchange.module.css","component/img/rose.png","component/Header/Header.jsx","component/Information/Navig/Navig.jsx","component/Information/Informat.jsx","api/api.js","redux/number-reducer.ts","component/hooks/cyrrentTypeSelector.tsx","component/Information/Exchange/Exchange.tsx","component/Information/Valuta/Valuta.tsx","component/Information/Currencies/Currencies.tsx","App.js","reportWebVitals.js","redux/redux-store.ts","index.js"],"names":["module","exports","Header","className","st","maincontainer","container","src","rose","alt","foto","text","Navig","mainContainer","menu__body","menu__list","to","menu__link","activeClassName","selected","Informat","blok","instace","axios","create","baseURL","userAPI","get","then","response","data","ADD_NUMBER","UPDATE_NUMBER","CURRENT_CURRENCY","CHANGE_CURRENCY","RESULT_CURRENCY","initialState","result","currentCurrency","changeCurrency","resultCurrency","newMessText","getCourse","dispatch","type","numbersReducer","state","action","stateCopy","newMess","currentTypeSelector","useSelector","Exchange","useDispatch","useEffect","resultConver","onCurentValut","valut","change","filter","v","txt","actionCurrentCurrency","rate","onChangeValut","actionChangeCurrency","conv","val","length","toFixed","actionResultCurrency","form","formContainer","bodyContainer","id","name","map","n","value","onClick","choice","cols","rows","onChange","event","body","currentTarget","console","log","buttonchoice","Valute","valute","Currencies","useState","current","setCurrent","res","person","cc","currenciesElement","c","Valuta","headContainer","nameValuta","nameUa","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","applyMiddleware","thunkMiddlewear","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.613003e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Navig_mainContainer__1QO-S\",\"container\":\"Navig_container__3x6cY\",\"menu__list\":\"Navig_menu__list__30nf3\",\"menu__link\":\"Navig_menu__link__wRaM5\",\"selected\":\"Navig_selected__dQUwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Currencies_form__1ReE4\",\"formContainer\":\"Currencies_formContainer__1SdcU\",\"headContainer\":\"Currencies_headContainer__2w4Ni\",\"nameValuta\":\"Currencies_nameValuta__21rW4\",\"nameUa\":\"Currencies_nameUa__1jmG1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"maincontainer\":\"Header_maincontainer__1r_Ri\",\"container\":\"Header_container__3Vqpt\",\"foto\":\"Header_foto__7IQn8\",\"text\":\"Header_text__35PK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Valuta_formContainer__34tl_\",\"bodyContainer\":\"Valuta_bodyContainer__JtIB3\",\"choice\":\"Valuta_choice__kN8Np\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Informat_container___CWRn\",\"blok\":\"Informat_blok__iJLg0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Exchange_container__2MAYD\",\"form\":\"Exchange_form__3uHa3\",\"formContainer\":\"Exchange_formContainer__tNBuT\",\"bodyContainer\":\"Exchange_bodyContainer__2Gl8U\",\"choice\":\"Exchange_choice__13kin\",\"buttonchoice\":\"Exchange_buttonchoice__xNj8f\",\"selected\":\"Exchange_selected__3TtGl\",\"text\":\"Exchange_text__2J6sv\"};","export default __webpack_public_path__ + \"static/media/rose.dd1d12a0.png\";","import React from 'react'\r\nimport rose from '../img/rose.png'\r\nimport st from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={st.maincontainer}>\r\n            <div className={st.container}>\r\n                <div>\r\n                    <img src={rose} alt=\"\" className={st.foto} />\r\n                </div>\r\n                <div className={st.text}>\r\n                    <h1>SK converter</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport st from './Navig.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Navig = () => {\r\n    return (\r\n        <div className={st.mainContainer}>\r\n            <div className={st.container}>\r\n                <nav className={st.menu__body}>\r\n                    <ul className={st.menu__list}>\r\n                        <li><NavLink to=\"/exchange\" className={st.menu__link} activeClassName={st.selected}>Exchange</NavLink ></li>\r\n                        <li><NavLink to=\"/currencies\" className={st.menu__link} activeClassName={st.selected}>Ğ¡urrencies</NavLink ></li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navig\r\n\r\n\r\n","import React from 'react'\r\nimport st from './Informat.module.css'\r\nimport Navig from './Navig/Navig'\r\n\r\n\r\nconst Informat = () => {\r\n\r\n    \r\n    return (\r\n        <div className={st.container}>\r\n            <div className={st.blok}>\r\n                <Navig />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Informat","import axios from 'axios'\r\n\r\nconst instace = axios.create({\r\n    baseURL: 'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchangenew?json',\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport const userAPI = {\r\n    getCourse() {\r\n        return instace.get()\r\n            .then((response) => {\r\n                return response.data\r\n            })\r\n    }\r\n\r\n}\r\n","import { Dispatch } from 'redux'\r\nimport { userAPI } from '../api/api'\r\n\r\n\r\nconst ADD_NUMBER = 'ADD_NUMBER'\r\nconst UPDATE_NUMBER = 'UPDATE_NUMBER'\r\nconst UPDATE_COURSE = 'UPDATE_COURSE'\r\nconst CURRENT_CURRENCY = 'CURRENT_CURRENCY'\r\nconst CHANGE_CURRENCY = 'CHANGE_CURRENCY'\r\nconst RESULT_CURRENCY = 'RESULT_CURRENCY'\r\n\r\n\r\n\r\n\r\n\r\ntype resultType = {\r\n    cc: string\r\n    exchangedate: Date\r\n    r030: number\r\n    rate: number\r\n    txt: string\r\n}\r\n\r\nexport type initialStateType = {\r\n    result: resultType[]\r\n    currentCurrency: number[]\r\n    changeCurrency: number[]\r\n    resultCurrency: number\r\n    newMessText: number\r\n}\r\n\r\nlet initialState: initialStateType = {\r\n    result: [],\r\n    currentCurrency: [],    //ÑĞµĞºÑÑĞ°Ñ Ğ²Ğ°Ğ»ÑÑĞ°\r\n    changeCurrency: [],    //ĞºĞ°ĞºÑÑ Ğ²Ğ°Ğ»ÑÑÑ ÑĞ¾ÑÑÑ Ğ¿Ğ¾Ğ»ÑÑĞ¸ÑÑ\r\n    resultCurrency: 0,     //ÑĞµĞ·ÑĞ»ÑÑĞ°Ñ ĞºĞ¾Ğ½Ğ²ĞµÑÑĞ°ÑĞ¸Ğ¸\r\n    newMessText:0,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst numbersReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_NUMBER: return {\r\n            ...state, result: action.result\r\n        }\r\n        case UPDATE_NUMBER: {\r\n            let stateCopy = { ...state }\r\n            stateCopy.newMessText = action.newMess\r\n            return stateCopy\r\n        }\r\n        case CURRENT_CURRENCY: {\r\n            let stateCopy = { ...state }\r\n            stateCopy.currentCurrency = action.result\r\n            return stateCopy\r\n        }\r\n        case CHANGE_CURRENCY: {\r\n            let stateCopy = { ...state }\r\n            stateCopy.changeCurrency = action.result\r\n            return stateCopy\r\n        }\r\n        case RESULT_CURRENCY: {\r\n            let stateCopy = { ...state }\r\n            stateCopy.resultCurrency = action.result\r\n            return stateCopy\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport type ActionsType = actionAddNewCourseType | actionUpdateMessTextType | actionCourseType | actionCurrentCurrencyType |\r\n    actionChangeCurrencyType | actionResultCurrencyType\r\n\r\n\r\n\r\ntype actionAddNewCourseType = {\r\n    type: typeof ADD_NUMBER\r\n    result: resultType[]\r\n}\r\n\r\nexport let actionAddNewCourse = (rates: resultType[]): actionAddNewCourseType => {\r\n    return {\r\n        type: ADD_NUMBER,\r\n        result: rates\r\n    }\r\n}\r\n\r\n\r\ntype actionUpdateMessTextType = {\r\n    type: typeof UPDATE_NUMBER\r\n    newMess: number\r\n}\r\nexport let actionUpdateMessText = (text: number): actionUpdateMessTextType => {\r\n    return {\r\n        type: UPDATE_NUMBER,\r\n        newMess: text\r\n    }\r\n}\r\n\r\n\r\ntype actionCourseType = {\r\n    type: typeof UPDATE_COURSE\r\n    result: number[]\r\n}\r\nexport let actionCourse = (newresult: number[]): actionCourseType => {\r\n    return {\r\n        type: UPDATE_COURSE,\r\n        result: newresult\r\n    }\r\n}\r\n\r\n\r\ntype actionCurrentCurrencyType = {\r\n    type: typeof CURRENT_CURRENCY\r\n    result: number[]\r\n}\r\nexport let actionCurrentCurrency = (result: number[]): actionCurrentCurrencyType => {\r\n    return {\r\n        type: CURRENT_CURRENCY,\r\n        result: result\r\n    }\r\n}\r\n\r\ntype actionChangeCurrencyType = {\r\n    type: typeof CHANGE_CURRENCY\r\n    result: number[]\r\n}\r\n\r\nexport let actionChangeCurrency = (result: number[]): actionChangeCurrencyType => {\r\n    return {\r\n        type: CHANGE_CURRENCY,\r\n        result: result\r\n    }\r\n}\r\n\r\n\r\ntype actionResultCurrencyType = {\r\n    type: typeof RESULT_CURRENCY\r\n    result: number\r\n}\r\nexport let actionResultCurrency = (result: number): actionResultCurrencyType => {\r\n    return {\r\n        type: RESULT_CURRENCY,\r\n        result: result\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getCourse = () => {\r\n    return (dispatch: Dispatch) => {\r\n        userAPI.getCourse()\r\n            .then((data: resultType[]) => {\r\n                dispatch(actionAddNewCourse(data))\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default numbersReducer","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { rootState } from \"../../redux/redux-store\";\r\n\r\n\r\n\r\n\r\nexport const currentTypeSelector: TypedUseSelectorHook<rootState> =useSelector","import React, {FC, useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport st from './Exchange.module.css'\r\nimport {actionUpdateMessText, actionCurrentCurrency, actionChangeCurrency, actionResultCurrency, getCourse} from '../../../redux/number-reducer'\r\nimport {currentTypeSelector} from '../../hooks/cyrrentTypeSelector'\r\n\r\n\r\nconst Exchange: FC = () => {\r\n\r\n\r\n    \r\n    const dispatch=useDispatch()\r\n     useEffect(() => {\r\n           dispatch(getCourse()) \r\n    }, []);\r\n\r\nconst {changeCurrency,newMessText,currentCurrency,result,resultCurrency}=currentTypeSelector(state=>state.resultConver)\r\n\r\n\r\n\r\n\r\n\r\n    const updateText = (event:any) => {\r\n        let body:number = event.currentTarget.value\r\n        console.log(typeof body)\r\n       dispatch(actionUpdateMessText(body))\r\n\r\n    }\r\n\r\n    let onCurentValut = (valut: string) => {\r\n        let change:any = result.filter(v => v.txt === valut)\r\n        dispatch(actionCurrentCurrency(change[0].rate))\r\n\r\n    }\r\n\r\n    let onChangeValut = (valut:string) => {\r\n        let change:any = result.filter(v => v.txt === valut)\r\n        dispatch(actionChangeCurrency(change[0].rate))\r\n\r\n    }\r\n\r\n    const conv = () => {\r\n        let a: number|number[]\r\n        let b:number|number[]\r\n        let f:number|number[] \r\n        let c:number|number[]\r\n\r\n        if (currentCurrency.length == 0) {\r\n            a = result[0].rate\r\n        }\r\n        else {\r\n            a = currentCurrency;\r\n        }\r\n        if (changeCurrency.length == 0) {\r\n            b = result[0].rate\r\n        } else {\r\n            b = changeCurrency;\r\n        }\r\n         c= newMessText\r\n        \r\n        f= (+a / +b) * +c\r\n        \r\n        let val:any = (f.toFixed(1))\r\n        return dispatch(actionResultCurrency(val));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={st.container}>\r\n            <div className={st.form}>\r\n                <div className={st.formContainer}>\r\n                    <div className={st.bodyContainer}>\r\n                        <div >\r\n                            <div>\r\n                                <form className={st.selected}>\r\n                                    <select id=\"country\" name=\"country\">\r\n                                        {result.map(n => {\r\n                                            return <option value={n.txt} onClick={() => { onCurentValut(n.txt) }}>\r\n                                                {n.txt}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className={st.choice}>\r\n                            <div>\r\n                                <form className={st.selected}>\r\n                                    <select id=\"country\" name=\"country\">\r\n                                        {result.map(n => {\r\n                                            return <option value={n.txt} onClick={() => { onChangeValut(n.txt) }}> {n.txt}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={st.formContainer}>\r\n                    <div className={st.bodyContainer}>\r\n                        <div >\r\n                            <div>\r\n                                <div className={st.text}>\r\n                                    <textarea name=\"\" id=\"\" cols={30} rows={10} onChange={updateText} value={newMessText}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={st.choice}>\r\n                            <div>\r\n                                <div className={st.text}>\r\n                                    <textarea cols={30} rows={10}  value={resultCurrency} ></textarea>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={st.buttonchoice}>\r\n                    <div className={st.bodyContainer}>\r\n                        <div className={st.selected}>\r\n                            <button onClick={() => { conv() }}>\r\n                                Exchange\r\n\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exchange","import React, { FC } from 'react'\r\nimport st from './Valuta.module.css'\r\n\r\ninterface ValutProps{\r\n    name:string,\r\n    valute:number\r\n}\r\n\r\n\r\nconst Valute:FC <ValutProps>= ({name,valute}) => {\r\n    return (\r\n        <div>\r\n            <div className={st.formContainer}>\r\n                <div className={st.bodyContainer}>\r\n                    <div className={st.choice}> \r\n                        {name}\r\n                    </div>\r\n                    <div className={st.choice}> \r\n                        {valute}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Valute\r\n","import React, { useEffect, useState } from 'react'\r\nimport st from './Currencies.module.css'\r\nimport Valuta from '../Valuta/Valuta'\r\nimport axios from 'axios'\r\n\r\n\r\ntype SearchType = {\r\n\r\n    r030: number,\r\n    txt: string,\r\n    rate: number,\r\n    cc: string,\r\n    exchangedate: Date\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst Currencies = () => {\r\n\r\n\r\n    const [current, setCurrent] = useState<SearchType[]>([])\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get<SearchType[]>('https://bank.gov.ua/NBUStatService/v1/statdirectory/exchangenew?json')\r\n            .then(res => {\r\n                setCurrent(res.data)\r\n            })\r\n\r\n    }, []);\r\n\r\n   \r\n\r\n    const valut = current.filter(person => {\r\n        if (person.cc === \"USD\") {\r\n            return true\r\n        } else if (person.cc === \"EUR\") {\r\n            return true\r\n        } else if (person.cc === \"RUB\") {\r\n            return true\r\n        } else if (person.cc === \"PLN\") {\r\n            return true\r\n        }\r\n\r\n    }\r\n    )\r\n    console.log(valut)\r\n\r\n    const currenciesElement = valut.map((c) => {\r\n        return <Valuta valute={c.rate} name={c.cc} />\r\n    })\r\n    return (\r\n\r\n\r\n\r\n\r\n        <div>\r\n            <div className={st.container}>\r\n                <div className={st.form}>\r\n                    <div className={st.formContainer}>\r\n                        <div className={st.headContainer}>\r\n                            <div>\r\n                                <div className={st.nameValuta}>Valuta</div>\r\n                            </div>\r\n\r\n                            <div className={st.nameUa}>\r\n                            UA\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            \r\n                            {currenciesElement}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Currencies\r\n","\nimport './App.css';\nimport Header from './component/Header/Header'\nimport Informat from './component/Information/Informat'\nimport { Route } from 'react-router-dom'\nimport Exchange from './component/Information/Exchange/Exchange';\nimport Currencies from './component/Information/Currencies/Currencies'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Informat />\n      <Route path='/exchange' render={() => <Exchange />}  />\n      <Route path='/currencies' render={() => <Currencies />} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore,combineReducers,applyMiddleware } from 'redux'\r\nimport resultConver from './number-reducer'\r\nimport thunkMiddlewear from 'redux-thunk'\r\n\r\n\r\n\r\nlet reducer = combineReducers({\r\n   resultConver,\r\n   // \r\n})\r\n\r\nlet store = createStore(reducer,applyMiddleware(thunkMiddlewear))\r\n\r\n\r\n\r\nexport type rootState= ReturnType<typeof reducer>\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n\nconst rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store} >\n                <App />\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root'));\n}\nrerenderEntireTree();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}